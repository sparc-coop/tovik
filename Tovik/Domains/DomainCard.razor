@using Sparc.Blossom.Content
<div id="@Domain.Id" class="domain-card @("domain-card__" + PageType)">
    <header>
        <img src="@Domain.FaviconUri" alt="@Domain.Domain" onerror="this.src='/images/Star.svg'" />
        <h2>
            @Domain.Domain
            @if (Domain.DateConnected != null)
            {
                <VerifiedIcon />                
            }
        </h2>
        <p>Last translated: @(Domain.LastTranslatedDate == null ? "Never" : Domain.LastTranslatedDate.Value.ToShortDateString())</p>
    </header>

    @if (PageType == "home")
    {
        <ul class="languages">
            @foreach (var language in Domain.PagesPerLanguage)
            {
                <li>@Language(language.Key)?.NativeName</li>
            }
        </ul>
    }
    else
    {
        @if (Domain.DateConnected == null)
        {
            <p class="error-message">It looks like Tovik isn't yet installed on your domain. <a href="/install">Follow the install instructions here!</a></p>
            <button class="primary-btn" @onclick=Verify>Retry Verification</button>
        }
        else
        {
            <p>
                <VerifiedIcon /> Tovik is installed and active on this domain! Last checked @Domain.DateConnected.Value.ToShortDateString()
            </p>
        }

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p class="error-message">@ErrorMessage</p>
        }
    }

    <footer>
        <ul>
            <li>
                <PageIcon />
                Pages Translated
                <span>@Domain.TovikUsage.ToString("N0")</span>
            </li>
            <li>
                <LanguageIcon />
                Languages Translated
                <span>@Domain.PagesPerLanguage.Count</span>
            </li>
        </ul>

        @if (PageType == "home")
        {
            <button class="actions-btn" data-id="@Domain.Id" @onclick='() => Nav.NavigateTo($"/sites/{Domain.Id}")'>Manage</button>
        }
        else
        {
            <button @onclick="ToggleDeleteModal" class="delete-btn secondary-btn"><TrashIcon /></button>
        }
    </footer>
</div>

<DeleteModal Domain=Domain ShowModal=showDeleteModal OnClose=ToggleDeleteModal OnDelete="DeleteDomain" />

@inject Tovik.Domains.TovikDomains TovikDomains
@code {
    [Parameter] public required SparcDomain Domain { get; set; }
    [Parameter] public required IEnumerable<Language> Languages { get; set; }
    [Parameter] public string? PageType { get; set; }
    string? ErrorMessage;

    bool showDeleteModal = false;
    // bool showDomainActions = false;

    // private void ToggleDomainActions()
    // {
    //     Js.InvokeVoidAsync("hideAllDomainActions");
    //     showDomainActions = !showDomainActions;
    // }

    Language? Language(string id) => Languages.FirstOrDefault(x => x.Matches(id));

    private void ToggleDeleteModal()
    {
        showDeleteModal = !showDeleteModal;
    }

    async Task Verify()
    {
        var result = await Domain.VerifyAsync();
        if (result)
        {
            await TovikDomains.Update(Domain);
            ErrorMessage = null;
        }
        else
        {
            ErrorMessage = $"{Domain.Domain} does not contain the expected Tovik script: https://tovik.app/tovik.js. Please ensure Tovik is installed correctly on this domain.";
        }
    }

    private async Task DeleteDomain(string id)
    {
        await TovikDomains.DeleteAsync(Domain);
        Nav.NavigateTo("/sites", true);
    }
}